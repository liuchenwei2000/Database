索引

在表中创建索引（index），可以更加快速高效的查询数据，用户无法看到索引，它们只能被用来加速查询。
更新一个包含索引的表需要比更新一个没有索引的表更多的时间，这是因为索引本身也需要更新。因此，理想的做法是仅仅在常常被搜索的列（以及表）上面创建索引。

SQL使用CREATE INDEX语句创建索引，以达到在不读取整个表的情况下，能更快地查找数据。格式如下：
CREATE [UNIQUE][CLUSTER] INDEX <索引名> ON <表名>
(<列名> [<次序>] [,<列名> [<次序>]]… )

其中，<表名>是要建索引的基本表的名字。索引可以建立在该表的一列或多列上，各列名之间用逗号分隔。每个<列名>后面还可以用<次序>指定索引值的排列次序，可选ASC(升序)或DESC(降序)，缺省值为ASC。
UNIQUE表明此索引的每一个索引值只对应唯一的数据记录。CLUSTER表示要建立的索引是聚簇索引。所谓聚簇索引是指索引键值的逻辑顺序与表中记录的物理顺序一致的索引。聚簇索引查找数据几乎总是比使用非聚簇索引快。
用户可以在最常查询的列上建立聚簇索引以提高查询效率。显然在一个基本表上最多只能建立一个聚簇索引。建立聚簇索引后，更新索引列数据时，往往导致表中记录的物理顺序的变更，代价较大，因此对于经常更新的列不宜建立聚簇索引。

CREATE INDEX index_name ON my_table(column1) 
为表my_table的column1列创建一个名叫index_name的简单索引（两行数据可以拥有相同的索引值）。

CREATE UNIQUE INDEX index_name ON my_table(column1) 
为表my_table的column1列创建一个名叫index_name的唯一性索引（两行数据不能拥有相同的索引值）。

CREATE INDEX index_name ON my_table(column1 DESC, column2) 
为表my_table的column1列、column2列创建一个名叫index_name的简单索引，其中column1列以降序索引列中的值。


删除索引
索引一经建立，就由系统使用和维护它，不需用户干预。在SQL语言中，删除索引使用DROP INDEX语句，一般格式为：
DROP INDEX <索引名>

对于MySQL、SQLServer等数据库，需要使用：DROP INDEX <索引名> ON <表名>

示例：DROP INDEX i1

删除索引时，系统会同时从数据字典中删去有关该索引的描述。

一般来说：
1，如果一个(或一组)属性经常在查询条件中出现，则考虑在这个(或这组)属性上建立索引。
2，如果一个属性经常作为最大值和最小值等聚集函数的参数，则考虑在这个属性上建立索引。
3，如果一个(或一组)属性经常在连接操作的连接条件中出现，则考虑在这个(或这组)属性上建立索引。

关系上定义的索引数并不是越多越好，系统为维护索引要付出代价，查找索引也要付出代价。例如，若一个关系的更新频率很高，这个关系上定义的索引数不能太多。因为更新一个关系时，必须对这个关系上有关的索引做相应的修改。
